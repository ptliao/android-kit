/**
 * @param gradle
 * @param settings
 * @param moduleInfoList
 *        [mode] egg.module_template
 *          module2project: 所有implementation depsApp.module_template依赖都转为project(:module_template)
 *          module: 不改变
 */
static void includeDynamic(Gradle gradle, Settings settings, List moduleInfoList) {
    moduleInfoList.forEach({ info ->
        String project = info["project"]
        String localPath = info["localPath"]
        String mode = info["mode"]

        if (mode == "module2project") {
            settings.include(project)
            settings.project(project).projectDir = new File(localPath)
        }
    })
    gradle.allprojects { prj ->
        prj.configurations.all(new Action<Configuration>() {
            @Override
            void execute(Configuration config) {
                config.resolutionStrategy.dependencySubstitution(new Action<DependencySubstitutions>() {
                    @Override
                    void execute(DependencySubstitutions dependencySubstitutions) {
                        moduleInfoList.forEach { info ->
                            String module = info["module"]
                            String project = info["project"]
                            String mode = info["mode"]

                            ComponentSelector moduleS = dependencySubstitutions.module(module)
                            if (mode == "module2project") {
                                ComponentSelector projectS = dependencySubstitutions.project(project)
                                dependencySubstitutions.substitute(moduleS).with(projectS)
                            }
                        }
                    }
                })
            }
        })
    }
}

ext.dynamic = [
        includeDynamic: this.&includeDynamic
]